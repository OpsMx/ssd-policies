{
    "conditions": [
        {
            "condition_name": "C-0030 - NSA - Ingress and Egress Blocked",
            "condition_value": "0"
        }
    ],
    "metadata": {
      "account_name": "prod",
      "scan_type": "NSA",
      "compliance_score": 65.64455,
      "results": [
        {
          "control_id": "C-0030",
          "control_title": "Ingress and Egress blocked",
          "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
           ]
        },
        {
      "control_id": "C-0012",
      "control_title": "Applications credentials in configuration files",
      "failed_resources": [
        "path=1690466016/api=/v1//ConfigMap/oes-ui-config",
        "path=2638446261/api=/v1//ConfigMap/ssd-demosep-spinnaker-halyard-init-script"
      ]
    },
    {
      "control_id": "C-0048",
      "control_title": "HostPath mount",
      "failed_resources": [
        "path=30417889/api=apps/v1//Deployment/tool-chain"
      ]
    },
    {
      "control_id": "C-0063",
      "control_title": "Portforwarding privileges",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0034",
      "control_title": "Automatic mapping of service account",
      "failed_resources": [
        "path=300051362/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-nats",
        "path=838147417/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard",
        "path=1196012099/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-minio"
      ]
    },
    {
      "control_id": "C-0017",
      "control_title": "Immutable container filesystem",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0009",
      "control_title": "Resource limits",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor"
      ]
    },
    {
      "control_id": "C-0016",
      "control_title": "Allow privilege escalation",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0015",
      "control_title": "List Kubernetes secrets",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/ssd-demosep-minio-update-prometheus-secret/path=2308278368/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-minio-update-prometheus-secret/path=875762807/api=rbac.authorization.k8s.io/v1//Role/ssd-demosep-minio-update-prometheus-secret",
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0037",
      "control_title": "CoreDNS poisoning",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0260",
      "control_title": "Missing network policy",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0013",
      "control_title": "Non-root containers",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0055",
      "control_title": "Linux hardening",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0053",
      "control_title": "Access container service account",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/ssd-demosep-minio-update-prometheus-secret/path=2308278368/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-minio-update-prometheus-secret/path=875762807/api=rbac.authorization.k8s.io/v1//Role/ssd-demosep-minio-update-prometheus-secret",
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0188",
      "control_title": "Minimize access to create pods",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0007",
      "control_title": "Data Destruction",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    }
  ],
  "references": "https://workbench.cisecurity.org/sections/1126667/recommendations/1838637",
  "suggestions" : [
        {
	     "policy_name": "c-0002 - nsa - exec into container",
	     "suggestion": "It is recommended to prohibit \u201ckubectl exec\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.\n"
	},
        {
	     "policy_name": "c-0005 - nsa - api server insecure port is enabled",
	     "suggestion": "Set the insecure-port flag of the API server to zero.\n"
	},
        {
	     "policy_name": "c-0009 - nsa - resource limits",
	     "suggestion": "Define LimitRange and Resource Limits in the namespace or in the deployment/pod manifests.\n"
	},
        {
	     "policy_name": "c-0012 - nsa - applications credentials in configuration files",
	     "suggestion": "Use Kubernetes secrets or Key Management Systems to store credentials.\n"
	},
        {
	     "policy_name": "c-0013 - nsa - non-root containers",
	     "suggestion": "If your application does not need root privileges, make sure to define the runAsUser or runAsGroup under the PodSecurityContext and use user ID 1000 or higher. Do not turn on allowPrivlegeEscalation bit and make sure runAsNonRoot is true.\n"
	},
        {
	     "policy_name": "c-0016 - nsa - allow privilege escalation",
	     "suggestion": "If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.\n"
	},
        {
	     "policy_name": "c-0017 - nsa - immutable container filesystem",
	     "suggestion": "Set the filesystem of the container to read-only when possible (pod securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.\n"
	},
        {
	     "policy_name": "c-0030 - nsa - ingress and egress blocked",
	     "suggestion": "Define a network policy that restricts ingress and egress connections.\n"
	},
        {
	     "policy_name": "c-0034 - nsa - automatic mapping of service account",
	     "suggestion": "Disable automatic mounting of service account tokens to pods either at the service account level or at the individual pod level, by specifying the automountServiceAccountToken: false. Note that pod level takes precedence.\n"
	},
        {
	     "policy_name": "c-0035 - nsa - cluster-admin binding",
	     "suggestion": "You should apply least privilege principle. Make sure cluster admin permissions are granted only when it is absolutely necessary. Don't use subjects with such high permissions for daily operations.\n"
	},
        {
	     "policy_name": "c-0038 - nsa - host pid/ipc privileges",
	     "suggestion": "Remove hostPID and hostIPC from the yaml file(s) privileges unless they are absolutely necessary.\n"
	},
        {
	     "policy_name": "c-0041 - nsa - hostnetwork access",
	     "suggestion": "Only connect pods to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those pods that must have access to host network by design.\n"
	},
        {
	     "policy_name": "c-0044 - nsa - container hostport",
	     "suggestion": "Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead.\n"
	},
        {
	     "policy_name": "c-0046 - nsa - insecure capabilities",
	     "suggestion": "Remove all insecure capabilities which are not necessary for the container.\n"
	},
        {
	     "policy_name": "c-0054 - nsa - cluster internal networking",
	     "suggestion": "Define Kubernetes network policies or use alternative products to protect cluster network.\n"
	},
        {
	     "policy_name": "c-0055 - nsa - linux hardening",
	     "suggestion": "You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.\n"
	},
        {
	     "policy_name": "c-0057 - nsa - privileged container",
	     "suggestion": "Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.\n"
	},
        {
	     "policy_name": "c-0058 - nsa - cve-2021-25741 - using symlink for arbitrary host file system access",
	     "suggestion": "To mitigate this vulnerability without upgrading kubelet, you can disable the VolumeSubpath feature gate on kubelet and kube-apiserver, or remove any existing Pods using subPath or subPathExpr feature.\n"
	},
        {
	     "policy_name": "c-0059 - nsa - cve-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
	     "suggestion": "To mitigate this vulnerability: 1. Upgrade to a version that allows mitigation (>"
	},
        {
	     "policy_name": "c-0066 - nsa - secret/etcd encryption enabled",
	     "suggestion": "Turn on the etcd encryption in your cluster, for more see the vendor documentation.\n"
	},
        {
	     "policy_name": "c-0067 - nsa - audit logs enabled",
	     "suggestion": "Turn on audit logging for your cluster. Look at the vendor guidelines for more details\n"
	},
        {
	     "policy_name": "c-0068 - nsa - psp enabled",
	     "suggestion": "Turn Pod Security Policies on in your cluster, if you use other admission controllers to control the behavior that PSP controls, exclude this control from your scans\n"
	},
        {
	     "policy_name": "c-0069 - nsa - disable anonymous access to kubelet service",
	     "suggestion": "Start the kubelet with the --anonymous-auth"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	},
        {
	     "policy_name": "c-0070 - nsa - enforce kubelet client tls authentication",
	     "suggestion": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.\n"
	}
]
}
   
}
