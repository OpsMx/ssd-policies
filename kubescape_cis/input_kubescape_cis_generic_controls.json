{
    "conditions": [
        {
            "condition_name": "CIS-1.1.1 Ensure that the API server pod specification file permissions are set to 600 or more restrictive",
            "condition_value": "0"
        }
    ],
    "metadata": {
      "account_name": "prod",
      "scan_type": "CIS",
      "compliance_score": 65.64455,
      "results": [
        {
          "control_id": "C-0092",
          "control_title": "CIS-1.1.1 Ensure that the API server pod specification file permissions are set to 600 or more restrictive",
          "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
           ]
        },
        {
      "control_id": "C-0012",
      "control_title": "Applications credentials in configuration files",
      "failed_resources": [
        "path=1690466016/api=/v1//ConfigMap/oes-ui-config",
        "path=2638446261/api=/v1//ConfigMap/ssd-demosep-spinnaker-halyard-init-script"
      ]
    },
    {
      "control_id": "C-0048",
      "control_title": "HostPath mount",
      "failed_resources": [
        "path=30417889/api=apps/v1//Deployment/tool-chain"
      ]
    },
    {
      "control_id": "C-0063",
      "control_title": "Portforwarding privileges",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0034",
      "control_title": "Automatic mapping of service account",
      "failed_resources": [
        "path=300051362/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-nats",
        "path=838147417/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard",
        "path=1196012099/api=/v1/ssd-demosep/ServiceAccount/ssd-demosep-minio"
      ]
    },
    {
      "control_id": "C-0017",
      "control_title": "Immutable container filesystem",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0009",
      "control_title": "Resource limits",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor"
      ]
    },
    {
      "control_id": "C-0016",
      "control_title": "Allow privilege escalation",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0015",
      "control_title": "List Kubernetes secrets",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/ssd-demosep-minio-update-prometheus-secret/path=2308278368/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-minio-update-prometheus-secret/path=875762807/api=rbac.authorization.k8s.io/v1//Role/ssd-demosep-minio-update-prometheus-secret",
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0037",
      "control_title": "CoreDNS poisoning",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0260",
      "control_title": "Missing network policy",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0013",
      "control_title": "Non-root containers",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0055",
      "control_title": "Linux hardening",
      "failed_resources": [
        "path=1998213173/api=batch/v1//Job/create-controller-secret",
        "path=1322037759/api=apps/v1//Deployment/oes-ui",
        "path=4048677833/api=apps/v1//StatefulSet/ssd-demosep-redis-master",
        "path=352314889/api=apps/v1//StatefulSet/ssd-demosep-spinnaker-halyard",
        "path=2431324741/api=apps/v1//Deployment/ssd-opa",
        "path=4118796092/api=apps/v1/ssd-demosep/StatefulSet/ssd-demosep-nats",
        "path=4156784717/api=apps/v1//Deployment/sapor-gate",
        "path=449430683/api=apps/v1//Deployment/ssd-demosep-openldap",
        "path=1835925139/api=apps/v1//Deployment/rabbitmq",
        "path=30417889/api=apps/v1//Deployment/tool-chain",
        "path=3681701659/api=apps/v1//StatefulSet/oes-db",
        "path=3669385323/api=batch/v1//Job/ssd-demosep-create-sample-app",
        "path=1438172996/api=apps/v1//Deployment/ssd-demosep-minio",
        "path=2901206330/api=apps/v1/ssd-demosep/Deployment/ssd-demosep-nats-box",
        "path=784976241/api=apps/v1//Deployment/oes-gate",
        "path=1612916895/api=apps/v1//Deployment/supplychain-preprocessor",
        "path=2762021541/api=apps/v1//Deployment/opsmx-controller-controller1"
      ]
    },
    {
      "control_id": "C-0053",
      "control_title": "Access container service account",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/ssd-demosep-minio-update-prometheus-secret/path=2308278368/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-minio-update-prometheus-secret/path=875762807/api=rbac.authorization.k8s.io/v1//Role/ssd-demosep-minio-update-prometheus-secret",
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0188",
      "control_title": "Minimize access to create pods",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    },
    {
      "control_id": "C-0007",
      "control_title": "Data Destruction",
      "failed_resources": [
        "/ssd-demosep/ServiceAccount/default/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=782921241/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-spinnaker",
        "/ssd-demosep/ServiceAccount/ssd-demosep-spinnaker-halyard/path=3298718973/api=rbac.authorization.k8s.io/v1//Role/spinnaker-role/path=4292249274/api=rbac.authorization.k8s.io/v1//RoleBinding/ssd-demosep-spinnaker-halyard"
      ]
    }
  ],
  "references": "https://workbench.cisecurity.org/sections/1126667/recommendations/1838637",
  "suggestions" : [
        {
	     "policy_name": "CIS-1.1.1 Ensure that the api server pod specification file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/manifests/kube-apiserver.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.2 ensure that the api server pod specification file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.3 ensure that the controller manager pod specification file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/manifests/kube-controller-manager.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.4 ensure that the controller manager pod specification file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.5 ensure that the scheduler pod specification file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/manifests/kube-scheduler.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.6 ensure that the scheduler pod specification file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/manifests/kube-scheduler.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.7 ensure that the etcd pod specification file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/manifests/etcd.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.8 ensure that the etcd pod specification file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/manifests/etcd.yaml\n"
	},
        {
	     "policy_name": "CIS-1.1.9 ensure that the container network interface file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 <path/to/cni/files>\n"
	},
        {
	     "policy_name": "CIS-1.1.10 ensure that the container network interface file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root <path/to/cni/files>\n"
	},
        {
	     "policy_name": "CIS-1.1.11 ensure that the etcd data directory permissions are set to 700 or more restrictive",
	     "suggestion": "On the etcd server node, get the etcd data directory, passed as an argument --data-dir, from the below command:\nps -ef | grep etcd\n Run the below command (based on the etcd data directory found above). For example,\nchmod 700 /var/lib/etcd\n"
	},
        {
	     "policy_name": "CIS-1.1.12 ensure that the etcd data directory ownership is set to etcd:etcd",
	     "suggestion": "On the etcd server node, get the etcd data directory, passed as an argument --data-dir, from the below command:\nps -ef | grep etcd\n Run the below command (based on the etcd data directory found above). For example,\nchown etcd:etcd /var/lib/etcd\n"
	},
        {
	     "policy_name": "CIS-1.1.13 ensure that the admin.conf file permissions are set to 600",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/admin.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.14 ensure that the admin.conf file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/admin.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.15 ensure that the scheduler.conf file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/scheduler.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.16 ensure that the scheduler.conf file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/scheduler.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.17 ensure that the controller-manager.conf file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod 600 /etc/kubernetes/controller-manager.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.18 ensure that the controller-manager.conf file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchown root:root /etc/kubernetes/controller-manager.conf\n"
	},
        {
	     "policy_name": "CIS-1.1.19 ensure that the kubernetes pki directory and file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nnchown -R root:root /etc/kubernetes/pki/\n"
	},
        {
	     "policy_name": "CIS-1.1.20 ensure that the kubernetes pki certificate file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod -R 600 /etc/kubernetes/pki/*.crt\n"
	},
        {
	     "policy_name": "CIS-1.1.21 ensure that the kubernetes pki key file permissions are set to 600",
	     "suggestion": "Run the below command (based on the file location on your system) on the Control Plane node. For example,\nchmod -R 600 /etc/kubernetes/pki/*.key\n"
	},
        {
	     "policy_name": "CIS-1.2.1 ensure that the api server --anonymous-auth argument is set to false",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.\n--anonymous-auth"
	},
        {
	     "policy_name": "CIS-1.2.2 ensure that the api server --token-auth-file parameter is not set",
	     "suggestion": "Follow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --token-auth-file"
	},
        {
	     "policy_name": "CIS-1.2.3 ensure that the api server --denyserviceexternalips is not set",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --DenyServiceExternalIPs parameter\nor\nThe Kubernetes API server flag disable-admission-plugins takes a comma-delimited list of admission control plugins to be disabled, even if they are in the list of plugins enabled by default.\nkube-apiserver --disable-admission-plugins"
	},
        {
	     "policy_name": "CIS-1.2.4 ensure that the api server --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the kubelet client certificate and key parameters as below.\n--kubelet-client-certificate"
	},
        {
	     "policy_name": "CIS-1.2.5 ensure that the api server --kubelet-certificate-authority argument is set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --kubelet-certificate-authority parameter to the path to the cert file for the certificate authority.\n--kubelet-certificate-authority"
	},
        {
	     "policy_name": "CIS-1.2.6 ensure that the api server --authorization-mode argument is not set to alwaysallow",
	     "suggestion": "Edit the API server pod specification file  /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to values other than AlwaysAllow .One such example could be as below.\n--authorization-mode"
	},
        {
	     "policy_name": "CIS-1.2.7 ensure that the api server --authorization-mode argument includes node",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to a value that includes Node.\n--authorization-mode"
	},
        {
	     "policy_name": "CIS-1.2.8 ensure that the api server --authorization-mode argument includes rbac",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --authorization-mode parameter to a value that includes RBAC, for example:\n--authorization-mode"
	},
        {
	     "policy_name": "CIS-1.2.9 ensure that the admission control plugin eventratelimit is set",
	     "suggestion": "Follow the Kubernetes documentation and set the desired limits in a configuration file.\nThen, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameters.\n--enable-admission-plugins"
	},
        {
	     "policy_name": "CIS-1.2.10 ensure that the admission control plugin alwaysadmit is not set",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n"
	},
        {
	     "policy_name": "CIS-1.2.11 ensure that the admission control plugin alwayspullimages is set",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --enable-admission-plugins parameter to include AlwaysPullImages.\n--enable-admission-plugins"
	},
        {
	     "policy_name": "CIS-1.2.12 ensure that the admission control plugin securitycontextdeny is set if podsecuritypolicy is not used",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --enable-admission-plugins parameter to include SecurityContextDeny, unless PodSecurityPolicy is already in place.\n--enable-admission-plugins"
	},
        {
	     "policy_name": "CIS-1.2.13 ensure that the admission control plugin serviceaccount is set",
	     "suggestion": "Follow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n"
	},
        {
	     "policy_name": "CIS-1.2.14 ensure that the admission control plugin namespacelifecycle is set",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n"
	},
        {
	     "policy_name": "CIS-1.2.15 ensure that the admission control plugin noderestriction is set",
	     "suggestion": "Follow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction.\n--enable-admission-plugins"
	},
        {
	     "policy_name": "CIS-1.2.16 ensure that the api server --secure-port argument is not set to 0",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n"
	},
        {
	     "policy_name": "CIS-1.2.17 ensure that the api server --profiling argument is set to false",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.\n--profiling"
	},
        {
	     "policy_name": "CIS-1.2.18 ensure that the api server --audit-log-path argument is set",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example:\n--audit-log-path"
	},
        {
	     "policy_name": "CIS-1.2.19 ensure that the api server --audit-log-maxage argument is set to 30 or as appropriate",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxage parameter to 30 or as an appropriate number of days:\n--audit-log-maxage"
	},
        {
	     "policy_name": "CIS-1.2.20 ensure that the api server --audit-log-maxbackup argument is set to 10 or as appropriate",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxbackup parameter to 10 or to an appropriate value.\n--audit-log-maxbackup"
	},
        {
	     "policy_name": "CIS-1.2.21 ensure that the api server --audit-log-maxsize argument is set to 100 or as appropriate",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --audit-log-maxsize parameter to an appropriate size in MB. For example, to set it as 100 MB:\n--audit-log-maxsize"
	},
        {
	     "policy_name": "CIS-1.2.22 ensure that the api server --request-timeout argument is set as appropriate",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example,\n--request-timeout"
	},
        {
	     "policy_name": "CIS-1.2.23 ensure that the api server --service-account-lookup argument is set to true",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.\n--service-account-lookup"
	},
        {
	     "policy_name": "CIS-1.2.24 ensure that the api server --service-account-key-file argument is set as appropriate",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the --service-account-key-file parameter to the public key file for service accounts:\n--service-account-key-file"
	},
        {
	     "policy_name": "CIS-1.2.25 ensure that the api server --etcd-certfile and --etcd-keyfile arguments are set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the etcd certificate and key file parameters.\n--etcd-certfile"
	},
        {
	     "policy_name": "CIS-1.2.26 ensure that the api server --tls-cert-file and --tls-private-key-file arguments are set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the TLS certificate and private key file parameters.\n--tls-cert-file"
	},
        {
	     "policy_name": "CIS-1.2.27 ensure that the api server --client-ca-file argument is set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the client certificate authority file.\n--client-ca-file"
	},
        {
	     "policy_name": "CIS-1.2.28 ensure that the api server --etcd-cafile argument is set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the etcd certificate authority file parameter.\n--etcd-cafile"
	},
        {
	     "policy_name": "CIS-1.2.29 ensure that the api server --encryption-provider-config argument is set as appropriate",
	     "suggestion": "Follow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --encryption-provider-config parameter to the path of that file:\n--encryption-provider-config"
	},
        {
	     "policy_name": "CIS-1.2.30 ensure that encryption providers are appropriately configured",
	     "suggestion": "Follow the Kubernetes documentation and configure a EncryptionConfig file. In this file, choose aescbc, kms or secretbox as the encryption provider.\n"
	},
        {
	     "policy_name": "CIS-1.2.31 ensure that the api server only makes use of strong cryptographic ciphers",
	     "suggestion": "Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the Control Plane node and set the below parameter.\n--tls-cipher-suites"
	},
        {
	     "policy_name": "CIS-1.3.1 ensure that the controller manager --terminated-pod-gc-threshold argument is set as appropriate",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --terminated-pod-gc-threshold to an appropriate threshold, for example:\n--terminated-pod-gc-threshold"
	},
        {
	     "policy_name": "CIS-1.3.2 ensure that the controller manager --profiling argument is set to false",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the below parameter.\n--profiling"
	},
        {
	     "policy_name": "CIS-1.3.3 ensure that the controller manager --use-service-account-credentials argument is set to true",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node to set the below parameter.\n--use-service-account-credentials"
	},
        {
	     "policy_name": "CIS-1.3.4 ensure that the controller manager --service-account-private-key-file argument is set as appropriate",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --service-account-private-key-file parameter to the private key file for service accounts.\n--service-account-private-key-file"
	},
        {
	     "policy_name": "CIS-1.3.5 ensure that the controller manager --root-ca-file argument is set as appropriate",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --root-ca-file parameter to the certificate bundle file.\n--root-ca-file"
	},
        {
	     "policy_name": "CIS-1.3.6 ensure that the controller manager rotatekubeletservercertificate argument is set to true",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and set the --feature-gates parameter to include RotateKubeletServerCertificate"
	},
        {
	     "policy_name": "CIS-1.3.7 ensure that the controller manager --bind-address argument is set to 127.0.0.1",
	     "suggestion": "Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the Control Plane node and ensure the correct value for the --bind-address parameter\n"
	},
        {
	     "policy_name": "CIS-1.4.1 ensure that the scheduler --profiling argument is set to false",
	     "suggestion": "Edit the Scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml file on the Control Plane node and set the below parameter.\n--profiling"
	},
        {
	     "policy_name": "CIS-1.4.2 ensure that the scheduler --bind-address argument is set to 127.0.0.1",
	     "suggestion": "Edit the Scheduler pod specification file /etc/kubernetes/manifests/kube-scheduler.yaml on the Control Plane node and ensure the correct value for the --bind-address parameter\n"
	},
        {
	     "policy_name": "CIS-2.1 ensure that the --cert-file and --key-file arguments are set as appropriate",
	     "suggestion": "Follow the etcd service documentation and configure TLS encryption.\n Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.\n--cert-file"
	},
        {
	     "policy_name": "CIS-2.2 ensure that the --client-cert-auth argument is set to true",
	     "suggestion": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.\n--client-cert-auth"
	},
        {
	     "policy_name": "CIS-2.3 ensure that the --auto-tls argument is not set to true",
	     "suggestion": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --auto-tls parameter or set it to false.\n--auto-tls"
	},
        {
	     "policy_name": "CIS-2.4 ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate",
	     "suggestion": "Follow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster.\nThen, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.\n--peer-client-file"
	},
        {
	     "policy_name": "CIS-2.5 ensure that the --peer-client-cert-auth argument is set to true",
	     "suggestion": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter. --peer-client-cert-auth"
	},
        {
	     "policy_name": "CIS-2.6 ensure that the --peer-auto-tls argument is not set to true",
	     "suggestion": "Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --peer-auto-tls parameter or set it to false.\n--peer-auto-tls"
	},
        {
	     "policy_name": "CIS-2.7 ensure that a unique certificate authority is used for etcd",
	     "suggestion": "Follow the etcd documentation and create a dedicated certificate authority setup for the etcd service.\nThen, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.\n--trusted-ca-file"
	},
        {
	     "policy_name": "CIS-3.2.1 ensure that a minimal audit policy is created",
	     "suggestion": "Create an audit policy file for your cluster.\n"
	},
        {
	     "policy_name": "CIS-3.2.2 ensure that the audit policy covers key security concerns",
	     "suggestion": "Consider modification of the audit policy in use on the cluster to include these items, at a minimum.\n"
	},
        {
	     "policy_name": "CIS-4.1.1 ensure that the kubelet service file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchmod 600 /etc/systemd/system/kubelet.service.d/kubeadm.conf\n"
	},
        {
	     "policy_name": "CIS-4.1.2 ensure that the kubelet service file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root /etc/systemd/system/kubelet.service.d/kubeadm.conf\n"
	},
        {
	     "policy_name": "CIS-4.1.3 if proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchmod 600 <proxy kubeconfig file>\n"
	},
        {
	     "policy_name": "CIS-4.1.4 if proxy kubeconfig file exists ensure ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root <proxy kubeconfig file>\n"
	},
        {
	     "policy_name": "CIS-4.1.5 ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchmod 600 /etc/kubernetes/kubelet.conf\n"
	},
        {
	     "policy_name": "CIS-4.1.6 ensure that the --kubeconfig kubelet.conf file ownership is set to root:root",
	     "suggestion": "Run the below command (based on the file location on your system) on the each worker node. For example,\nchown root:root /etc/kubernetes/kubelet.conf\n"
	},
        {
	     "policy_name": "CIS-4.1.7 ensure that the certificate authorities file permissions are set to 600 or more restrictive",
	     "suggestion": "Run the following command to modify the file permissions of the --client-ca-file\nchmod 600 <filename>\n"
	},
        {
	     "policy_name": "CIS-4.1.8 ensure that the client certificate authorities file ownership is set to root:root",
	     "suggestion": "Run the following command to modify the ownership of the --client-ca-file.\nchown root:root <filename>\n"
	},
        {
	     "policy_name": "CIS-4.1.9 if the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive",
	     "suggestion": "Run the following command (using the config file location identied in the Audit step)\nchmod 600 /var/lib/kubelet/config.yaml\n"
	},
        {
	     "policy_name": "CIS-4.1.10 if the kubelet config.yaml configuration file is being used validate file ownership is set to root:root",
	     "suggestion": "Run the following command (using the config file location identied in the Audit step)\nchown root:root /etc/kubernetes/kubelet.conf\n"
	},
        {
	     "policy_name": "CIS-4.2.1 ensure that the --anonymous-auth argument is set to false",
	     "suggestion": "If using a Kubelet config file, edit the file to set authentication: anonymous: enabled to false.\n If using executable arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--anonymous-auth"
	},
        {
	     "policy_name": "CIS-4.2.2 ensure that the --authorization-mode argument is not set to alwaysallow",
	     "suggestion": "If using a Kubelet config file, edit the file to set authorization: mode to Webhook.\n If using executable arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode"
	},
        {
	     "policy_name": "CIS-4.2.3 ensure that the --client-ca-file argument is set as appropriate",
	     "suggestion": "If using a Kubelet config file, edit the file to set authentication: x509: clientCAFile to the location of the client CA file.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file"
	},
        {
	     "policy_name": "CIS-4.2.4 verify that the --read-only-port argument is set to 0",
	     "suggestion": "If using a Kubelet config file, edit the file to set readOnlyPort to 0.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port"
	},
        {
	     "policy_name": "CIS-4.2.5 ensure that the --streaming-connection-idle-timeout argument is not set to 0",
	     "suggestion": "If using a Kubelet config file, edit the file to set streamingConnectionIdleTimeout to a value other than 0.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout"
	},
        {
	     "policy_name": "CIS-4.2.6 ensure that the --protect-kernel-defaults argument is set to true",
	     "suggestion": "If using a Kubelet config file, edit the file to set protectKernelDefaults: true.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--protect-kernel-defaults"
	},
        {
	     "policy_name": "CIS-4.2.7 ensure that the --make-iptables-util-chains argument is set to true",
	     "suggestion": "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and remove the --make-iptables-util-chains argument from the KUBELET_SYSTEM_PODS_ARGS variable.\n Based on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
	},
        {
	     "policy_name": "CIS-4.2.8 ensure that the --hostname-override argument is not set",
	     "suggestion": "Edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and remove the --hostname-override argument from the KUBELET_SYSTEM_PODS_ARGS variable.\n Based on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
	},
        {
	     "policy_name": "CIS-4.2.9 ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture",
	     "suggestion": "If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.\n If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n Based on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
	},
        {
	     "policy_name": "CIS-4.2.10 ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate",
	     "suggestion": "If using a Kubelet config file, edit the file to set tlsCertFile to the location of the certificate file to use to identify this Kubelet, and tlsPrivateKeyFile to the location of the corresponding private key file.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameters in KUBELET\\_CERTIFICATE\\_ARGS variable.\n --tls-cert-file"
	},
        {
	     "policy_name": "CIS-4.2.11 ensure that the --rotate-certificates argument is not set to false",
	     "suggestion": "If using a Kubelet config file, edit the file to add the line rotateCertificates: true or remove it altogether to use the default value.\n If using command line arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and remove --rotate-certificates"
	},
        {
	     "policy_name": "CIS-4.2.12 verify that the rotatekubeletservercertificate argument is set to true",
	     "suggestion": "Edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.\n--feature-gates"
	},
        {
	     "policy_name": "CIS-4.2.13 ensure that the kubelet only makes use of strong cryptographic ciphers",
	     "suggestion": "If using a Kubelet config file, edit the file to set TLSCipherSuites: to TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 or to a subset of these values.\n If using executable arguments, edit the kubelet service file /etc/kubernetes/kubelet.conf on each worker node and set the --tls-cipher-suites parameter as follows, or to a subset of these values.\n --tls-cipher-suites"
	},
        {
	     "policy_name": "CIS-5.1.1 ensure that the cluster-admin role is only used where required",
	     "suggestion": "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and if they need this role or if they could use a role with fewer privileges.\n Where possible, first bind users to a lower privileged role and then remove the clusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n"
	},
        {
	     "policy_name": "CIS-5.1.2 minimize access to secrets",
	     "suggestion": "Where possible, remove get, list and watch access to secret objects in the cluster.\n"
	},
        {
	     "policy_name": "CIS-5.1.3 minimize wildcard use in roles and clusterroles",
	     "suggestion": "Where possible replace any use of wildcards in clusterroles and roles with specific objects or actions.\n"
	},
        {
	     "policy_name": "CIS-5.1.4 minimize access to create pods",
	     "suggestion": "Where possible, remove create access to pod objects in the cluster.\n"
	},
        {
	     "policy_name": "CIS-5.1.5 ensure that default service accounts are not actively used",
	     "suggestion": "Create explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server.\n Modify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n"
	},
        {
	     "policy_name": "CIS-5.1.6 ensure that service account tokens are only mounted where necessary",
	     "suggestion": "Modify the definition of pods and service accounts which do not need to mount service account tokens to disable it.\n"
	},
        {
	     "policy_name": "CIS-5.1.8 limit use of the bind, impersonate and escalate permissions in the kubernetes cluster",
	     "suggestion": "Where possible, remove the impersonate, bind and escalate rights from subjects.\n"
	},
        {
	     "policy_name": "CIS-5.2.1 ensure that the cluster has at least one active policy control mechanism in place",
	     "suggestion": "Ensure that either Pod Security Admission or an external policy control system is in place for every namespace which contains user workloads.\n"
	},
        {
	     "policy_name": "CIS-5.2.2 minimize the admission of privileged containers",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of privileged containers.\n"
	},
        {
	     "policy_name": "CIS-5.2.3 minimize the admission of containers wishing to share the host process id namespace",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of hostPID containers.\n"
	},
        {
	     "policy_name": "CIS-5.2.4 minimize the admission of containers wishing to share the host ipc namespace",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of hostIPC containers.\n"
	},
        {
	     "policy_name": "CIS-5.2.5 minimize the admission of containers wishing to share the host network namespace",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of hostNetwork containers.\n"
	},
        {
	     "policy_name": "CIS-5.2.6 minimize the admission of containers with allowprivilegeescalation",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of conatiners with .spec.allowPrivilegeEscalation set to true.\n"
	},
        {
	     "policy_name": "CIS-5.2.7 minimize the admission of root containers",
	     "suggestion": "Create a policy for each namespace in the cluster, ensuring that either MustRunAsNonRoot or MustRunAs with the range of UIDs not including 0, is set.\n"
	},
        {
	     "policy_name": "CIS-5.2.8 minimize the admission of containers with the net_raw capability",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of containers with the NET_RAW capability.\n"
	},
        {
	     "policy_name": "CIS-5.2.9 minimize the admission of containers with added capabilities",
	     "suggestion": "Ensure that allowedCapabilities is not present in policies for the cluster unless it is set to an empty array.\n"
	},
        {
	     "policy_name": "CIS-5.2.10 minimize the admission of containers with capabilities assigned",
	     "suggestion": "Review the use of capabilites in applications runnning on your cluster. Where a namespace contains applicaions which do not require any Linux capabities to operate consider adding a policy which forbids the admission of containers which do not drop all capabilities.\n"
	},
        {
	     "policy_name": "CIS-5.2.11 minimize the admission of windows hostprocess containers",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of hostProcess containers.\n"
	},
        {
	     "policy_name": "CIS-5.2.12 minimize the admission of hostpath volumes",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of containers which use hostPath volumes.\n"
	},
        {
	     "policy_name": "CIS-5.2.13 minimize the admission of containers which use hostports",
	     "suggestion": "Add policies to each namespace in the cluster which has user workloads to restrict the admission of containers which use hostPort sections.\n"
	},
        {
	     "policy_name": "CIS-5.3.1 ensure that the cni in use supports network policies",
	     "suggestion": "If the CNI plugin in use does not support network policies, consideration should be given to making use of a different plugin, or finding an alternate mechanism for restricting traffic in the Kubernetes cluster.\n"
	},
        {
	     "policy_name": "CIS-5.3.2 ensure that all namespaces have network policies defined",
	     "suggestion": "Follow the documentation and create NetworkPolicy objects as you need them.\n"
	},
        {
	     "policy_name": "CIS-5.4.1 prefer using secrets as files over secrets as environment variables",
	     "suggestion": "If possible, rewrite application code to read secrets from mounted secret files, rather than from environment variables.\n"
	},
        {
	     "policy_name": "CIS-5.4.2 consider external secret storage",
	     "suggestion": "Refer to the secrets management options offered by your cloud provider or a third-party secrets management solution.\n"
	},
        {
	     "policy_name": "CIS-5.7.1 create administrative boundaries between resources using namespaces",
	     "suggestion": "Follow the documentation and create namespaces for objects in your deployment as you need them.\n"
	},
        {
	     "policy_name": "CIS-5.7.2 ensure that the seccomp profile is set to docker/default in your pod definitions",
	     "suggestion": "Use security context to enable the docker/default seccomp profile in your pod definitions. An example is as below:\nsecurityContext:\nseccompProfile:\ntype: RuntimeDefault\n"
	},
        {
	     "policy_name": "CIS-5.7.3 apply security context to your pods and containers",
	     "suggestion": "Follow the Kubernetes documentation and apply security contexts to your pods. For a suggested list of security contexts, you may refer to the CIS Security Benchmark for Docker Containers.\n"
	},
        {
	     "policy_name": "CIS-5.7.4 the default namespace should not be used",
	     "suggestion": "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n"
	}
]

}
   
}
